<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd">
    <!--配置service-->
    <bean id="accountService" class="com.itheima.service.impl.AccountServiceImpl"></bean>
    <!--配置logger类-->
    <bean id="logger" class="com.itheima.utils.Logger"></bean>
    <!--配置AOP-->
    <aop:config>
        <!--配置切入点表达式 id属性作为唯一标识，expression属性用来指定表达式内容
            此标签写在aop：aspect标签内部只能当前切面使用。
            他还可以写在aop：aspect外面，此时就变成所有切面可用，当时因为导入约束，该标签只能放在aop：aspect标签之上
        -->
        <aop:pointcut id="E1" expression="execution(* com.itheima.service.impl.*.*(..))"></aop:pointcut>
        <!--配置切面-->
        <aop:aspect id="logAdvice" ref="logger">
            <!--&lt;!&ndash;配置通知类型，并且建立通知方法和切入点方法的关联&ndash;&gt;-->
            <!--&lt;!&ndash;前置通知 在切入点方法执行之前执行&ndash;&gt;-->
            <!--<aop:before method="beforePrintLog" pointcut-ref="E1"></aop:before>-->
            <!--&lt;!&ndash;后置通知 在切入点方法正常执行之后执行 他和异常通知只能执行一个&ndash;&gt;-->
            <!--<aop:after-returning method="afterReturningPrintLog" pointcut-ref="E1"></aop:after-returning>-->
            <!--&lt;!&ndash;异常通知 在切入点方法执行业务操作中出现异常之后执行 他和后置通知只能执行一个&ndash;&gt;-->
            <!--<aop:after-throwing method="afterThrowingPrintLog" pointcut-ref="E1"></aop:after-throwing>-->
            <!--&lt;!&ndash;最终通知 不论如何，都会在最后执行&ndash;&gt;-->
            <!--<aop:after method="afterPrintLog" pointcut-ref="E1"></aop:after>-->
            <aop:around method="aroundPringLog" pointcut-ref="E1"></aop:around>
        </aop:aspect>
    </aop:config>
</beans>